spring.application.name=Cart
server.port=7070
logging.level.org.springframework.*=trace

spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER_URI:http://localhost:9090}

spring.data.mongodb.uri=mongodb://${MONGO_HOST:localhost}:27017/cart
#spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
spring.data.redis.port=6379
#server.tomcat.max-http-header-size=0
#server.tomcat.resource.cache-ttl=0
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer

# Use ErrorHandlingDeserializer for key and value
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Configure the actual deserializers
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.consumer.group-id: cartService
spring.kafka.consumer.auto-offset-reset: latest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.topic.name=ecom-events

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

management.endpoints.web.exposure.include=*